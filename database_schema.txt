COLUMNS
TICKET_ID INTEGER AUTO_INCREMENT NOT NULL PK
USER_ID varchar(18) NOT NULL "user who made the ticket"
STATUS number NOT NULL 1=requested, 2=pending, 3=resolved, 4=accepted, 5=denied
TYPE number 1=appeal, 2=report, 3=other
COMMENT varchar(255)
REMARKS varchar(255)
TICKET_MESSAGE varchar(18) "the private support ticket message"
RESPONSE_MESSAGE varchar(18) "the dm response message"
EXPIRE DATE "the time the ticket will expire, 0 for never expire"




Functions
createRequest // Initializes an empty request
    // INSERT ticket_id, user_id, status=0, response_message, expire
    // delete other requests by user
    // delete messasges related to it
    // create new ticket
    // send response
    // update with messageid
    // fails if there is another ticket from the same user with a status of 0

setType // Sets the type of the request 
    // UPDATE type, response_message

setComment // Sets the user comment
    // UPDATE comment, response_message

submitTicket // Submits ticket with finalized data
    // UPDATE status, ticket_message, expire
    // RETURNS PROMISE rejects if missing type and comment

closeTicket // Closes ticket with moderator remarks
    // UPDATE status, remarks, response_message, expire
    // RETURNS { ticket_message, response_message }


Modal Object:
```
new Modal()
    .setCustomId('SubmitTicket')
    .setTitle('Support Ticket')
    .addComponents(new MessageActionRow()
        .addComponents(new MessageSelectMenu()
            .setCustomId('TicketType')
            .setPlaceholder('Appeal Type')
            .setMinValues(1)
            .setMaxValues(1)
            .addOptions([{label:'Appeal',value:'APPEAL'},{label:'Report',value:'REPORT'},{label:'Other',value:'OTHER'}])
        ));
```

Interaction Handler:
```
client.on('interactionCreate', interaction => {
    if (!interaction.isModalSubmit()) return;

    if (interaction.customId.includes('SubmitTicket')) {
        console.log(interaction.fields.getField('TicketType'));
        interaction.reply('received');
    }
});
```

Output
```
C:\Program Files\nodejs\node.exe .\index.js
{value: undefined, type: 'SELECT_MENU', customId: 'TicketType'}
```

(yes I am selecting an option before submitting the modal)

It works fine with TextInputs, I have not tested with other Components
`{value: 'This is text submitted through a modal interaction', type: 'TEXT_INPUT', customId: 'TicketComment'}`